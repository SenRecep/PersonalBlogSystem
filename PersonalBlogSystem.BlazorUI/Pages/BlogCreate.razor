@page "/blog-create"
@inject IHttpCategoryService categoryService
@inject IHttpContentService contentService
@inject IToastService toastService
<PageTitle>Blog Create</PageTitle>


<EditForm Model="Model" OnSubmit="FormSubmit">
    <h3>Blog Create</h3>
    <hr />
    <div class="form-group row">
        <label for="title" class="col-sm-2 col-form-label">
            Title
        </label>
        <div class="col-sm-10">
            <InputText id="title" class="form-control" placeholder="Title"
                       @bind-Value="Model.Title" />
        </div>
    </div>

    <div class="form-group row mt-3">
        <label for="content" class="col-sm-2 col-form-label">
            Content
        </label>
        <div class="col-sm-10">
            <InputTextArea id="content" class="form-control" placeholder="Content"
                           @bind-Value="Model.Content" />
        </div>
    </div>

    <div class="form-group row my-3">
        <label for="category" class="col-sm-2 col-form-label">
            Category
        </label>
        <div class="col-sm-10">
            <select id="category" class="form-select" @bind="Model.CategoryId">
                @if (Categories is not null)
                    @foreach (var category in Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
            </select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-12">
            <input class="btn btn-primary w-100" type="submit" value="Create" />
        </div>
    </div>
</EditForm>


@code {
    public ContentCreateDto Model { get; set; } = new();
    public IEnumerable<CategoryDto>? Categories { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Categories = await categoryService.GetCategories();
        Model.CategoryId = Categories?.First().Id;
    }

    async Task FormSubmit()
    {
        var response = await contentService.CreateContent(Model);
        if (response)
        {
            toastService.ShowSuccess("Blog Created!");
            Model = new() { CategoryId = Categories?.First().Id };
            return;
        }

        toastService.ShowError("Error Creating Blog!");

    }
}
