@page "/category-create"
@inject IHttpCategoryService categoryService
@inject IHttpContentService contentService
@inject IToastService toastService
<PageTitle>Category Create</PageTitle>

<EditForm Model="Model" OnSubmit="FormSubmit">
    <h3>Category Create</h3>
    <hr />
    <div class="form-group row">
        <label for="name" class="col-sm-2 col-form-label">
            Name
        </label>
        <div class="col-sm-10">
            <InputText id="name" class="form-control" placeholder="Category Name"
                       @bind-Value="Model.Name" />
        </div>
    </div>

    <div class="form-group row my-3">
        <label for="categories" class="col-sm-2 col-form-label">
            Parent Category
        </label>
        <div class="col-sm-10">
            <select id="categories" class="form-select" @bind="Model.ParentId">
                @foreach (var category in Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-12">
            <input class="btn btn-primary w-100" type="submit" value="Create"  />
        </div>
    </div>
</EditForm>


@code {
    public ContentCreateDto Model { get; set; } = new();
    public List<CategoryDto> Categories { get; set; } = new() { new() { Name = "Root", Id = null } };
    protected override async Task OnInitializedAsync()
    {
        var categories = await categoryService.GetCategories();
        Categories.AddRange(categories!);
    }

    async Task FormSubmit()
    {
        var response = await contentService.CreateContent(Model);
        if (response)
        {
            toastService.ShowSuccess("Category Created!");
            return;
        }
        
        toastService.ShowError("Error Creating Category!");
        
    }
}
